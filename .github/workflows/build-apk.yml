name: Build Android App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v3

    - name: üõ†Ô∏è Install System Dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential libssl-dev libffi-dev \
          python3-dev python3-pip git unzip openjdk-17-jdk wget \
          libncurses-dev expect # Added 'expect' here
        python3 -m pip install --upgrade pip # Explicitly use python3 -m pip
        python3 -m pip install buildozer cython kivy # Explicitly use python3 -m pip

    - name: üì¶ Set Up Android SDK Command-line Tools
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        cd $ANDROID_HOME/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O tools.zip
        unzip tools.zip -d temp
        mkdir -p $ANDROID_HOME/cmdline-tools/latest
        mv temp/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/

    - name: ‚úÖ Add SDK Manager to PATH
      run: |
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"

    - name: üîç Verify sdkmanager Exists
      run: |
        ls -l $ANDROID_HOME/cmdline-tools/latest/bin
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --version

    - name: ‚úÖ Accept All SDK Licenses (using expect)
      run: |
        # Use 'expect' to automate license acceptance for all available SDK components.
        # This tries to accept licenses for anything sdkmanager finds.
        expect -c '
            set timeout -1;
            spawn $env(ANDROID_HOME)/cmdline-tools/latest/bin/sdkmanager --licenses;
            expect {
                "Accept? (y/N):" { send -- "y\r"; exp_continue; }
                eof
            }
        '
        # Do NOT explicitly install packages here. Let Buildozer handle the specific NDK/SDK/build-tools versions.

    - name: üöß Build APK
      run: buildozer -v android debug
      env:
        JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64 # Still crucial for Buildozer to find JDK

    - name: ‚¨ÜÔ∏è Upload APK
      uses: actions/upload-artifact@v4 # Use v4 as corrected
      with:
        name: SnakeGame-APK
        path: bin/*.apk
